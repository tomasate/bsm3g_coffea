datasets:
  data: 
    - electron
  mc:
    - dy_inclusive
    - singletop
    - tt
    - diboson
object_selection:
  electrons:
    field: events.Electron
    add_cut:
      is_tight:
        - working_points.electrons_id(events, 'wp80iso')
    cuts:
      - events.Electron.pt > 30
      - (np.abs(events.Electron.eta) < 2.4) & ((np.abs(events.Electron.eta) < 1.44) | (np.abs(events.Electron.eta) > 1.57))
      - working_points.electrons_id(events, 'wpLiso')
  muons:
    field: events.Muon
    cuts:
      - events.Muon.pt > 30
      - np.abs(events.Muon.eta) < 2.4
      - working_points.muons_iso(events, 'tight')
      - working_points.muons_id(events, 'tight')
      - delta_r_mask(events.Muon, objects['electrons'], 0.4)
  taus:
    field: events.Tau
    cuts:
      - events.Tau.pt > 20
      - np.abs(events.Tau.eta) < 2.3
      - np.abs(events.Tau.dz) < 0.2
      - working_points.taus_vs_jet(events, 'loose')
      - working_points.taus_vs_ele(events, 'vvloose')
      - working_points.taus_vs_mu(events, 'loose')
      - working_points.taus_decaymode(events, '13')
      - delta_r_mask(events.Tau, objects['electrons'], 0.3)
      - delta_r_mask(events.Tau, objects['muons'], 0.3)
  jets:
    field: events.Jet
    cuts:
      - events.Jet.pt > 20
      - np.abs(events.Jet.eta) < 2.4
      - working_points.jets_id(events, year, 'tightlepveto')
      - working_points.jets_pileup_id(events, 'tight', year)
      - delta_r_mask(events.Jet, objects['electrons'], 0.4)
      - delta_r_mask(events.Jet, objects['muons'], 0.4)
      - delta_r_mask(events.Jet, objects['taus'], 0.4)
  bjets:
    field: events.Jet
    cuts:
      - events.Jet.pt > 20
      - np.abs(events.Jet.eta) < 2.4
      - working_points.jets_id(events, year, 'tightlepveto')
      - working_points.jets_pileup_id(events, 'tight', year)
      - working_points.jets_deepjet_b(events, 'medium', year)
      - delta_r_mask(events.Jet, objects['electrons'], 0.4)
      - delta_r_mask(events.Jet, objects['muons'], 0.4)
      - delta_r_mask(events.Jet, objects['taus'], 0.4)
  met:
    field: select_met
  dielectrons:
    field: select_dielectrons_qcd
    add_cut:
      one_tight:
         - (1*objects['dielectrons'].l1.is_tight + 1*objects['dielectrons'].l2.is_tight) == 1
      two_tight:
         - (1*objects['dielectrons'].l1.is_tight + 1*objects['dielectrons'].l2.is_tight) == 2
    cuts:
      - objects['dielectrons'].l1.is_tight
      - (objects['dielectrons'].p4.mass < 60.0) | (objects['dielectrons'].p4.mass > 120.0)
      - np.sqrt(2 * objects['dielectrons'].l1.pt * objects['met'].pt * (ak.ones_like(objects['met'].pt) - np.cos(objects['dielectrons'].l1.delta_phi(objects['met'])))) > 60
event_selection:
  hlt_paths:
    electron:
      - SingleEle
  selections:
    goodvertex: events.PV.npvsGood > 0
    lumi: get_lumi_mask(events, year)
    trigger: get_trigger_mask(events, hlt_paths, dataset, year)
    trigger_match: get_trigger_match_mask(events, hlt_paths, year, events.Electron)
    metfilters: get_metfilters_mask(events, year)
    met_30: objects['met'].pt > 30
    hemcleaning: get_hemcleaning_mask(events, year)
    two_electrons: ak.num(objects['electrons']) == 2
    one_dielectron: ak.num(objects['dielectrons']) == 1
    muon_veto: ak.num(objects['muons']) == 0
    tau_veto: ak.num(objects['taus']) == 0
  categories:
    central:
      - goodvertex
      - lumi
      - trigger
      - trigger_match
      - metfilters
      - met_30
      - hemcleaning
      - two_electrons
      - one_dielectron
      - muon_veto
      - tau_veto
corrections:
  objects:
    - jets
    - jets_veto
    - muons
    - taus
    - met
  apply_obj_syst: false
  event_weights:
    genWeight: true
    pileupWeight: true
    l1prefiringWeight: true
    lhepdfWeight: false
    lhescaleWeight: false
    partonshowerWeight: true
    MuBoostWeight: false
    pujetid: 
      - id: tight
    btagging: 
      - id: medium
      - bc: true
      - light: true
      - full_run: false
    muon:
      - id: false
      - iso: false
      - reco: true
      - trigger: false
    electron: false
    tau: false
histogram_config:
  flow: true
  add_weight: true
  add_syst_axis: true
  axes:
    leading_electron_pt:
      type: Variable
      edges:
        - 50
        - 80
        - 110
        - 140
        - 180
        - 210
        - 240
        - 270
        - 300
        - 500
      label: $p_T(e_1)$ [GeV]
      expression: objects['dielectrons'].l1.pt
    leading_electron_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(e_1)$
      expression: objects['dielectrons'].l1.eta
    leading_electron_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(e_1)$
      expression: objects['dielectrons'].l1.phi
    leading_electron_flav: 
      type: Integer
      start: 0
      stop: 15
      label: genPartFlav($e_1$)
      expression: objects['dielectrons'].l1.genPartFlav
    leading_electron_tightid_wp:
      type: Regular
      bins: 2
      start: 0
      stop: 2
      label: $e_1$ Pass Tight Selection
      expression: objects['dielectrons'].l1.is_tight
    subleading_electron_pt:
      type: Variable
      edges:
        - 50
        - 80
        - 110
        - 140
        - 180
        - 210
        - 240
        - 270
        - 300
        - 500
      label: $p_T(e_2)$ [GeV]
      expression: objects['dielectrons'].l2.pt
    subleading_electron_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(e_2)$
      expression: objects['dielectrons'].l2.eta
    subleading_electron_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(e_2)$
      expression: objects['dielectrons'].l2.phi
    subleading_electron_flav: 
      type: Integer
      start: 0
      stop: 15
      label: genPartFlav($e_2$)
      expression: objects['dielectrons'].l2.genPartFlav
    subleading_electron_tightid_wp:
      type: Regular
      bins: 2
      start: 0
      stop: 2
      label: $e_2$ Pass Tight Selection
      expression: objects['dielectrons'].l2.is_tight
    jet_multiplicity:
      type: Integer
      start: 0
      stop: 14
      label: Jet multiplicity
      expression: ak.num(objects['jets'])
    bjet_multiplicity:
      type: Integer
      start: 0
      stop: 14
      label: b-Jet multiplicity
      expression: ak.num(objects['bjets'])
    met_pt:
      type: Variable
      edges:
        - 50
        - 75
        - 100
        - 125
        - 150
        - 175
        - 200
        - 300
        - 500
      label: $p_T^{miss}$ [GeV]
      expression: objects['met'].pt
    met_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(p_T^{miss})$ [GeV]
      expression: objects['met'].phi
    npvs:
      type: Integer
      start: 0
      stop: 100
      label: NPVS
      expression: events.PV.npvsGood
    electron_met_mass:
      type: Variable
      edges:
        - 40
        - 75
        - 100
        - 125
        - 150
        - 175
        - 200
        - 300
        - 500
        - 800
      label: $m_T(e, p_T^{\text{miss}})$ [GeV]
      expression: np.sqrt(2 * objects['dielectrons'].l1.pt * objects['met'].pt * (ak.ones_like(objects['met'].pt) - np.cos(objects['dielectrons'].l1.delta_phi(objects['met']))))
  layout:
    multiplicity:
      - jet_multiplicity
    transverse_mass:
      - electron_met_mass
      - subleading_electron_tightid_wp
    met:
      - met_pt
      - subleading_electron_tightid_wp
    leading_electron:
      - leading_electron_tightid_wp
      - leading_electron_pt
      - leading_electron_eta
      #- leading_electron_flav
    subleading_electron:
      - subleading_electron_tightid_wp
      - subleading_electron_pt
      - subleading_electron_eta
      #- subleading_electron_flav
    vertex:
      - npvs