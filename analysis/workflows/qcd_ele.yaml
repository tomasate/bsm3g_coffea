object_selection:
  electrons:
    field: events.Electron
    cuts:
      - events.Electron.pt > 55
      - (np.abs(events.Electron.eta) < 2.4) & ((np.abs(events.Electron.eta) < 1.44) | (np.abs(events.Electron.eta) > 1.57))
      - working_points.electrons_id(events, 'wpLiso')
      - ~working_points.electrons_id(events, 'wp80iso')
  muons:
    field: events.Muon
    cuts:
      - events.Muon.pt > 35
      - np.abs(events.Muon.eta) < 2.4
      - working_points.muons_id(events, 'tight')
      - working_points.muons_iso(events, 'tight')
      - delta_r_mask(events.Muon, objects['electrons'], 0.4)
  taus:
    field: events.Tau
    cuts:
      - events.Tau.pt > 20
      - np.abs(events.Tau.eta) < 2.3
      - np.abs(events.Tau.dz) < 0.2
      - working_points.taus_vs_jet(events, 'loose')
      - working_points.taus_vs_ele(events, 'vvloose')
      - working_points.taus_vs_mu(events, 'loose')
      - working_points.taus_decaymode(events, '13')
      - delta_r_mask(events.Tau, objects['electrons'], 0.4)
      - delta_r_mask(events.Tau, objects['muons'], 0.4)
  jets:
    field: events.Jet
    cuts:
      - events.Jet.pt > 20
      - np.abs(events.Jet.eta) < 2.4
      - working_points.jets_id(events, 'tightlepveto')
      - working_points.jets_pileup_id(events, 'tight', year)
      - delta_r_mask(events.Jet, objects['electrons'], 0.4)
      - delta_r_mask(events.Jet, objects['muons'], 0.4)
      - delta_r_mask(events.Jet, objects['taus'], 0.4)
  bjets:
    field: events.Jet
    cuts:
      - events.Jet.pt > 20
      - np.abs(events.Jet.eta) < 2.4
      - working_points.jets_id(events, 'tightlepveto')
      - working_points.jets_pileup_id(events, 'tight', year)
      - working_points.jets_deepjet_b(events, 'medium', year)
      - delta_r_mask(events.Jet, objects['electrons'], 0.4)
      - delta_r_mask(events.Jet, objects['muons'], 0.4)
      - delta_r_mask(events.Jet, objects['taus'], 0.4)
  met:
    field: select_met
event_selection:
  hlt_paths:
    SingleElectron:
      - SingleEle
  selections:
    goodvertex: events.PV.npvsGood > 0
    lumi: get_lumi_mask(events, year)
    trigger: get_trigger_mask(events, hlt_paths, dataset, year)
    trigger_match: get_trigger_match_mask(events, hlt_paths, year, events.Electron)
    metfilters: get_metfilters_mask(events, year)
    met_50: objects['met'].pt > 50
    hemcleaning: get_hemcleaning_mask(events, year)
    w_stitching: get_stitching_mask(events, dataset, 'WJetsToLNu_inclusive', 100)
    exactly_one_bjet: ak.num(objects['bjets']) == 1
    exactly_one_electron: ak.num(objects['electrons']) == 1
    muon_veto: ak.num(objects['muons']) == 0
    tau_veto: ak.num(objects['taus']) == 0
  categories:
    central:
      - goodvertex
      - lumi
      - trigger
      - trigger_match
      - metfilters
      - hemcleaning
      - w_stitching
      - met_50
      - exactly_one_bjet
      - exactly_one_electron
      - tau_veto
      - muon_veto
corrections:
  objects:
    - jets
    - jets_veto
    - muons
    - taus
    - met
  apply_obj_syst: false
  event_weights:
    genWeight: true
    pileupWeight: true
    l1prefiringWeight: true
    lhepdfWeight: false
    lhescaleWeight: false
    partonshowerWeight: true
    EleBoostWeight: false
    pujetid: 
      - id: tight
    btagging: 
      - id: medium
      - bc: true
      - light: true
      - full_run: false
    electron:
      - id: false
      - reco: true
      - trigger: false
    muon: false
    tau: false
histogram_config:
  flow: true
  add_weight: true
  add_syst_axis: true
  axes:
    electron_pt:
      type: Variable
      edges:
        - 30
        - 60
        - 90
        - 120
        - 150
        - 180
        - 210
        - 240
        - 300
        - 500
      label: $p_T(e)$ [GeV]
      expression: objects['electrons'].pt
    electron_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(e)$
      expression: objects['electrons'].eta
    electron_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(e)$
      expression: objects['electrons'].phi
    jet_multiplicity:
      type: Integer
      start: 0
      stop: 14
      label: Jet multiplicity
      expression: ak.num(objects['jets'])
    bjet_pt:
      type: Variable
      edges:
        - 20
        - 60
        - 90
        - 120
        - 150
        - 180
        - 210
        - 240
        - 300
        - 500
      label: $p_T(\text{bjet})$ [GeV]
      expression: objects['bjets'].pt
    bjet_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(\text{bjet})$
      expression: objects['bjets'].eta
    bjet_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(\text{bjet})$
      expression: objects['bjets'].phi
    met:
      type: Variable
      edges:
        - 50
        - 75
        - 100
        - 125
        - 150
        - 175
        - 200
        - 300
        - 500
      label: $p_T^{miss}$ [GeV]
      expression: objects['met'].pt
    met_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(p_T^{miss})$ [GeV]
      expression: objects['met'].phi
    electron_met_mass:
      type: Variable
      edges:
        - 40
        - 75
        - 100
        - 125
        - 150
        - 175
        - 200
        - 300
        - 500
        - 800
      label: $m_T(e, p_T^{miss})$ [GeV]
      expression: np.sqrt(2.0 * objects['electrons'].pt * objects['met'].pt * (ak.ones_like(objects['met'].pt) - np.cos(objects['electrons'].delta_phi(objects['met']))))
    npvs:
      type: Integer
      start: 0
      stop: 100
      label: vertex multiplicity
      expression: events.PV.npvsGood
  layout:
    jet_multiplicity:
      - jet_multiplicity
    mass:
      - electron_met_mass
      - met
    electrons:
      - electron_pt
      - electron_eta
      - electron_phi
    bjets:
      - bjet_pt
      - bjet_eta
      - bjet_phi
    vertex:
      - npvs